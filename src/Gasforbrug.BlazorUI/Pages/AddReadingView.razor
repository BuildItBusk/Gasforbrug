@using Gasforbrug.BlazorUI.Data
@using Gasforbrug.BlazorUI.Infrastructure
@inject NotifierService Notifier
@inject ReadingRepository BrowserStorage

<h2>Aflæs</h2>
<Validations @ref="validations" Mode="ValidationMode.Manual" Model="@reading">
    <p>
        <label for="Time" class="col-form-label-sm">Dato:</label>
        <Validation>
            <Field>
                <DateEdit @bind-Date="reading.Date" Class="text-right">
                    <Feedback>
                        <ValidationError />
                    </Feedback>
                </DateEdit>
            </Field>
        </Validation>
    </p>
    <p>
        <label for="Time" class="col-form-label-sm">Klokkeslæt:</label>
        <Field>
            <TimeEdit @bind-Time="Time" Class="text-right">
                <Feedback>
                    <ValidationError />
                </Feedback>
            </TimeEdit>
        </Field>
    </p>
    <p>
        <label for="reading" class="col-form-label-sm">Kubikmeter:</label>
        <Validation>
            <Field>
                <NumericPicker DecimalSeparator="," Decimals="3" Min="0" SelectAllOnFocus="true" @bind-Value="reading.Value" Class="text-right">
                    <Feedback>
                        <ValidationError />
                    </Feedback>
                </NumericPicker>
            </Field>
        </Validation>
    </p>
</Validations>

<Button Color="Color.Primary" Type="ButtonType.Submit" Clicked="@AddReading" id="add-reading">Tilføj aflæsning</Button>

@code {
    private ReadingStorageModel reading = new() { Date = DateTime.Now };
    private Validations? validations = new();

    private TimeSpan Time
    {
        get => reading.Date.TimeOfDay;
        set
        {
            var date = reading.Date.Date.Ticks;
            var time = value.Ticks;
            reading.Date = new DateTime(date + time);  
        }
    }

    private async Task AddReading()
    {
        if (validations is null)
            return;

        if (await validations.ValidateAll())
        {
            await BrowserStorage.Add(reading);
            await Notifier.Update("readingAdded", 0);
            reading = new() { Date = DateTime.Now };
        }
    }
}
